import { Shield } from 'lucide-react';

export const vulnerabilityAssessmentToolData = {
  // Basic Project Information
  title: 'Vulnerability Assessment Tool',
  slug: 'vulnerability-assessment-tool',
  description: 'Automated vulnerability scanner for web applications with comprehensive reporting and remediation suggestions.',
  longDescription: 'An advanced web application security scanner that automates the detection of common vulnerabilities including OWASP Top 10. Features intelligent crawling, comprehensive reporting, and actionable remediation guidance for development teams.',
  
  // Project Metadata
  status: 'In Progress' as const,
  timeline: '4 months (ongoing)',
  team: 'Solo project',
  icon: Shield,
  
  // Tags and Technologies
  tags: ['Python', 'Security', 'Web Security', 'Automation'],
  technologies: ['Python', 'Selenium', 'BeautifulSoup', 'SQLAlchemy', 'FastAPI', 'Vue.js', 'Docker'],
  
  // Project Links
  github: 'https://github.com/yourusername/vulnerability-assessment-tool',
  demo: 'https://demo.vuln-scanner.com',
  
  // Features
  features: [
    'OWASP Top 10 coverage',
    'Automated scanning',
    'Detailed vulnerability reports',
    'Remediation recommendations',
    'CI/CD pipeline integration',
    'Custom scanning rules',
    'Risk prioritization',
    'Compliance reporting'
  ],
  
  // Challenges and Solutions
  challenges: [
    'Balancing scan thoroughness with performance to avoid timeouts',
    'Handling complex single-page applications with dynamic content',
    'Generating actionable remediation advice that developers can understand',
    'Minimizing false positives while maintaining comprehensive coverage',
    'Creating scalable architecture for concurrent scans'
  ],
  
  // Project Outcomes
  outcomes: [
    'Currently in beta testing phase with 5 partner organizations',
    'Detected vulnerabilities in 15+ test applications during development',
    'Positive feedback from security teams and developers',
    'Achieved 85% accuracy rate in vulnerability detection',
    'Reduced manual security testing time by 60%'
  ],
  
  // Image Gallery
  images: [
    'https://images.unsplash.com/photo-1563013544-824ae1b704d3?w=800&h=400&fit=crop&crop=center',
    'https://images.unsplash.com/photo-1526374965328-7f61d4dc18c5?w=800&h=400&fit=crop&crop=center',
    'https://images.unsplash.com/photo-1550751827-4bd374c3f58b?w=800&h=400&fit=crop&crop=center'
  ],
  
  // Technical Details
  technicalDetails: {
    architecture: 'RESTful API backend with Vue.js frontend',
    database: 'PostgreSQL with SQLAlchemy ORM',
    deployment: 'Docker containers on AWS ECS',
    testing: 'Pytest for backend, Jest for frontend',
    security: 'JWT authentication, rate limiting, input validation'
  },
  
  // Case Study Information
  caseStudy: {
    available: false,
    problemStatement: 'Development teams needed automated security testing integrated into their workflow.',
    solution: 'Built a comprehensive scanner that integrates with CI/CD pipelines and provides developer-friendly reports.',
    results: 'Currently in testing phase - results pending.'
  }
};
